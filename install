#!/bin/bash
echo "This script checks if commands for Java, Node.js, n and yarn are available."
echo "We will try to install missing commands for you."
echo " "

# Check if Java is installed
if [ "$(command -v java)" ]; then
  if [[ $(java --version) =~ .*(jdk|JDK).* ]]; then
    echo "Java JDK found on your system"
  else
    echo "It seems like you are using a Java JRE version. For development a Java Development Kit (JDK) is needed."
    echo "Please install a Java JDK >= 11 manually, verify installation with 'java -version' and rerun the script!"
    exit 1
  fi
else
  if [ "$(command -v apt-get)" ]; then
    # Install default Java JDK
    sudo apt-get update
    sudo apt-get install default-jdk
  else
    echo "Please install a Java JDK >= 11 manually, verify installation with 'java -version' and rerun the script!"
    exit 1
  fi
fi

# Check if Node.js and npm are installed
if [ "$(command -v node)" ] && [ "$(command -v npm)" ]; then
  echo 'Node.js and npm found on your system'
elif [ "$(command -v apt-get)" ]; then
  # Debian / Ubuntu
  sudo apt-get update
  sudo apt-get install nodejs npm
elif [ "$(command -v yum)" ]; then
  # RHEL / CentOS / Fedora / IBM i
  yum install curl
elif [ "$(command -v dnf)" ]; then
  # RHEL / CentOS / Fedora
  dnf module install nodejs:12
elif [ "$(command -v pkg)" ]; then
  # FreeBSD/Android
  pkg install node
elif [ "$(command -v zypper)" ]; then
  # OpenSUSE
  zypper install nodejs12
elif [ "$(command -v pacman)" ]; then
  # ArchLinux
  pacman -S nodejs npm
elif [ "$(command -v emerge)" ]; then
  # Gentoo
  emerge nodejs
elif [ "$(command -v brew)" ]; then
  # MacOs
  brew install node
elif [ "$(command -v port)" ]; then
  # MacOs
  port install nodejs12
elif [ "$(command -v pkgin)" ]; then
  # MacOs / NetBSD / SmartOS and illumos
  pkgin -y install nodejs
elif [ "$(command -v pkg_add)" ]; then
  # OpenBSD
  pkg_add node
elif [ "$(command -v eopkg)" ]; then
  # Solus
  sudo eopkg install nodejs
elif [ "$(command -v xbps-install)" ]; then
  # Void Linux
  xbps-install -Sy nodejs
elif [ "$(command -v scoop)" ]; then
  # Scoop
  scoop install nodejs
elif [ "$(command -v cinst)" ]; then
  # cinst
  cinst nodejs.install
else
  echo 'Could not find a suitable package manager.'
  echo 'Please install everything manually!'
  exit 1
fi

# Check if n is installed
if [ "$(command -v n)" ]; then
  echo 'n found on your system (tool to switch node version)'
elif [ "$(command -v npm)" ]; then
  # Install m via npm
  sudo npm install --global n
else
  echo 'Could not find npm package manager.'
  echo 'Please install yarn manually!'
  exit 1
fi

echo 'Switching to node version 16'
sudo n 16

# Check if yarn is installed
if [ "$(command -v yarn)" ]; then
  echo 'yarn found on your system'
else
  # Install yarn via npm
  sudo npm install --global yarn
fi

echo 'Switching to yarn version berry'
cd ./frontend
yarn set version berry
cd ..

echo 'Everything installed successfully! Run the project with ./run'
